Stdlib.UInt8.max_v0 5uy 6uy = 6uy
Stdlib.UInt8.max_v0 10uy 1uy = 10uy
Stdlib.UInt8.max_v0 0uy 6uy = 6uy
Stdlib.UInt8.max_v0 255uy 0uy = 255uy

Stdlib.UInt8.min_v0 5uy 6uy = 5uy
Stdlib.UInt8.min_v0 10uy 10uy = 10uy
Stdlib.UInt8.min_v0 255uy 0uy = 0uy

Stdlib.UInt8.clamp_v0 1uy 2uy 1uy = 1uy
Stdlib.UInt8.clamp_v0 3uy 0uy 2uy = 2uy
Stdlib.UInt8.clamp_v0 100uy 0uy 0uy = 0uy
Stdlib.UInt8.clamp_v0 100uy 0uy 1uy = 1uy
Stdlib.UInt8.clamp_v0 100uy 1uy 0uy = 1uy


Stdlib.UInt8.add_v0 10uy 9uy = 19uy
Stdlib.UInt8.add_v0 88uy 9uy = 97uy
Stdlib.UInt8.add_v0 1uy 0uy = 1uy
Stdlib.UInt8.add_v0 254uy 1uy = 255uy

Stdlib.UInt8.add_v0 255uy 1uy = Builtin.testDerrorMessage "Encountered out-of-range value for type of Int"

Stdlib.UInt8.subtract_v0 10uy 9uy = 1uy
Stdlib.UInt8.subtract_v0 88uy 9uy = 79uy

Stdlib.UInt8.subtract_v0 0uy 1uy = Builtin.testDerrorMessage "Encountered out-of-range value for type of Int"

Stdlib.UInt8.subtract_v0 1uy 0uy = 1uy
Stdlib.UInt8.subtract_v0 255uy 1uy = 254uy

Stdlib.UInt8.multiply_v0 8uy 8uy = 64uy
Stdlib.UInt8.multiply_v0 8uy 0uy = 0uy
Stdlib.UInt8.multiply_v0 127uy 2uy = 254uy

Stdlib.UInt8.multiply_v0 128uy 2uy = Builtin.testDerrorMessage "Encountered out-of-range value for type of Int"

Stdlib.UInt8.multiply_v0 255uy 2uy = Builtin.testDerrorMessage "Encountered out-of-range value for type of Int"

Stdlib.UInt8.power_v0 2uy 3uy = 8uy
Stdlib.UInt8.power_v0 0uy 1uy = 0uy
Stdlib.UInt8.power_v0 1uy 0uy = 1uy
Stdlib.UInt8.power_v0 0uy 0uy = 1uy
Stdlib.UInt8.power_v0 1uy 255uy = 1uy

Stdlib.UInt8.power_v0 16uy 2uy = Builtin.testDerrorMessage "Encountered out-of-range value for type of Int"


Stdlib.UInt8.divide_v0 10uy 5uy = 2uy
Stdlib.UInt8.divide_v0 17uy 3uy = 5uy
Stdlib.UInt8.divide_v0 8uy 5uy = 1uy
Stdlib.UInt8.divide_v0 0uy 1uy = 0uy
Stdlib.UInt8.divide_v0 255uy 2uy = 127uy

Stdlib.UInt8.divide_v0 1uy 0uy = Builtin.testDerrorMessage "Cannot divide by 0"

Stdlib.UInt8.greaterThan_v0 20uy 1uy = true

Stdlib.UInt8.greaterThanOrEqualTo_v0 0uy 1uy = false
Stdlib.UInt8.greaterThanOrEqualTo_v0 1uy 0uy = true
Stdlib.UInt8.greaterThanOrEqualTo_v0 6uy 1uy = true
Stdlib.UInt8.greaterThanOrEqualTo_v0 6uy 8uy = false
Stdlib.UInt8.greaterThanOrEqualTo_v0 255uy 0uy = true
Stdlib.UInt8.greaterThanOrEqualTo_v0 0uy 255uy = false

Stdlib.UInt8.lessThanOrEqualTo_v0 6uy 8uy = true
Stdlib.UInt8.lessThanOrEqualTo_v0 10uy 1uy = false
Stdlib.UInt8.lessThanOrEqualTo_v0 0uy 1uy = true
Stdlib.UInt8.lessThanOrEqualTo_v0 1uy 0uy = false
Stdlib.UInt8.lessThanOrEqualTo_v0 255uy 0uy = false
Stdlib.UInt8.lessThanOrEqualTo_v0 0uy 255uy = true
Stdlib.UInt8.lessThanOrEqualTo_v0 255uy 255uy = true

Stdlib.UInt8.lessThan_v0 6uy 8uy = true
Stdlib.UInt8.lessThan_v0 10uy 1uy = false
Stdlib.UInt8.lessThan_v0 0uy 1uy = true
Stdlib.UInt8.lessThan_v0 1uy 0uy = false
Stdlib.UInt8.lessThan_v0 0uy 255uy = true
Stdlib.UInt8.lessThan_v0 255uy 255uy = false

Stdlib.UInt8.toString 120uy = "120"
Stdlib.UInt8.toString 1uy = "1"
Stdlib.UInt8.toString 0uy = "0" // UInt8 lower limit
Stdlib.UInt8.toString 255uy = "255" // UInt8 upper limit

Stdlib.UInt8.toFloat_v0 2uy = 2.0
Stdlib.UInt8.toFloat_v0 0uy = 0.0

Stdlib.UInt8.sqrt_v0 4uy = 2.0
Stdlib.UInt8.sqrt_v0 100uy = 10.0
Stdlib.UInt8.sqrt_v0 86uy = 9.273618495495704

Stdlib.UInt8.mod_v0 15uy 5uy = 0uy
Stdlib.UInt8.mod_v0 15uy 6uy = 3uy
Stdlib.UInt8.mod_v0 0uy 15uy = 0uy
Stdlib.UInt8.mod_v0 1uy 2uy = 1uy
Stdlib.UInt8.mod_v0 128uy 53uy = 22uy
Stdlib.UInt8.mod_v0 255uy 3uy = 0uy

Stdlib.UInt8.mod_v0 5uy 0uy = Builtin.testDerrorMessage "Cannot evaluate modulus against 0"


(Stdlib.List.range_v0 1L 5L)
|> Stdlib.List.map_v0 (fun x -> Stdlib.UInt8.random 1uy 2uy)
|> Stdlib.List.map_v0 (fun x ->
  (Stdlib.UInt8.greaterThanOrEqualTo x 1uy)
  && (Stdlib.UInt8.lessThanOrEqualTo x 2uy)) = [ true; true; true; true; true ]

(Stdlib.List.range_v0 1L 5L)
|> Stdlib.List.map_v0 (fun x -> Stdlib.UInt8.random 10uy 20uy)
|> Stdlib.List.map_v0 (fun x ->
  (Stdlib.UInt8.greaterThanOrEqualTo x 10uy)
  && (Stdlib.UInt8.lessThanOrEqualTo x 20uy)) = [ true; true; true; true; true ]

(Stdlib.List.range_v0 1L 5L)
|> Stdlib.List.map_v0 (fun x -> Stdlib.UInt8.random 2uy 1uy)
|> Stdlib.List.map_v0 (fun x ->
  (Stdlib.UInt8.greaterThanOrEqualTo x 1uy)
  && (Stdlib.UInt8.lessThanOrEqualTo x 2uy)) = [ true; true; true; true; true ]

(Stdlib.List.range_v0 1L 5L)
|> Stdlib.List.map_v0 (fun x -> Stdlib.UInt8.random 20uy 10uy)
|> Stdlib.List.map_v0 (fun x ->
  (Stdlib.UInt8.greaterThanOrEqualTo x 10uy)
  && (Stdlib.UInt8.lessThanOrEqualTo x 20uy)) = [ true; true; true; true; true ]

((Stdlib.List.range_v0 1L 100L)
 |> Stdlib.List.map_v0 (fun x -> Stdlib.UInt8.random 0uy 1uy)
 |> Stdlib.List.unique_v0) = [ 0uy; 1uy ]

((Stdlib.List.range_v0 1L 100L)
 |> Stdlib.List.map_v0 (fun x -> Stdlib.UInt8.random 0uy 2uy)
 |> Stdlib.List.unique_v0) = [ 0uy; 1uy; 2uy ]

Stdlib.UInt8.sum_v0 [ 1uy; 2uy ] = 3uy

Stdlib.UInt8.sum_v0 [ 1uy; 255uy ] = Builtin.testDerrorMessage "Encountered out-of-range value for type of Int"


// out of range
Stdlib.UInt8.parse_v0 "-129" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.OutOfRange
Stdlib.UInt8.parse_v0 "256" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.OutOfRange

// bad format
Stdlib.UInt8.parse_v0 "256uy" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "1 2 3" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "+ 1" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "- 1" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "0xA" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "0x123" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "0b0100" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "pi" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "Darklang.Stdlib.Math.pi" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "1.23E+04" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "1I" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "one" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat
Stdlib.UInt8.parse_v0 "XIV" = Stdlib.Result.Result.Error Stdlib.UInt8.ParseError.BadFormat


Stdlib.UInt8.fromInt8_v0 0y = Stdlib.Option.Option.Some 0uy
Stdlib.UInt8.fromInt8_v0 1y = Stdlib.Option.Option.Some 1uy
Stdlib.UInt8.fromInt8_v0 127y = Stdlib.Option.Option.Some 127uy
Stdlib.UInt8.fromInt8_v0 (-128y) = Stdlib.Option.Option.None

Stdlib.UInt8.fromInt16_v0 0s = Stdlib.Option.Option.Some 0uy
Stdlib.UInt8.fromInt16_v0 1s = Stdlib.Option.Option.Some 1uy
Stdlib.UInt8.fromInt16_v0 255s = Stdlib.Option.Option.Some 255uy
Stdlib.UInt8.fromInt16_v0 256s = Stdlib.Option.Option.None
Stdlib.UInt8.fromInt16_v0 (-1s) = Stdlib.Option.Option.None

Stdlib.UInt8.fromUInt16_v0 0us = Stdlib.Option.Option.Some 0uy
Stdlib.UInt8.fromUInt16_v0 1us = Stdlib.Option.Option.Some 1uy
Stdlib.UInt8.fromUInt16_v0 255us = Stdlib.Option.Option.Some 255uy
Stdlib.UInt8.fromUInt16_v0 256us = Stdlib.Option.Option.None

Stdlib.UInt8.fromInt32_v0 0l = Stdlib.Option.Option.Some 0uy
Stdlib.UInt8.fromInt32_v0 1l = Stdlib.Option.Option.Some 1uy
Stdlib.UInt8.fromInt32_v0 255l = Stdlib.Option.Option.Some 255uy
Stdlib.UInt8.fromInt32_v0 256l = Stdlib.Option.Option.None
Stdlib.UInt8.fromInt32_v0 (-1l) = Stdlib.Option.Option.None

Stdlib.UInt8.fromUInt32_v0 0ul = Stdlib.Option.Option.Some 0uy
Stdlib.UInt8.fromUInt32_v0 1ul = Stdlib.Option.Option.Some 1uy
Stdlib.UInt8.fromUInt32_v0 255ul = Stdlib.Option.Option.Some 255uy
Stdlib.UInt8.fromUInt32_v0 256ul = Stdlib.Option.Option.None

Stdlib.UInt8.fromInt64_v0 0L = Stdlib.Option.Option.Some 0uy
Stdlib.UInt8.fromInt64_v0 1L = Stdlib.Option.Option.Some 1uy
Stdlib.UInt8.fromInt64_v0 255L = Stdlib.Option.Option.Some 255uy
Stdlib.UInt8.fromInt64_v0 256L = Stdlib.Option.Option.None
Stdlib.UInt8.fromInt64_v0 (-1L) = Stdlib.Option.Option.None

Stdlib.UInt8.fromUInt64_v0 0UL = Stdlib.Option.Option.Some 0uy
Stdlib.UInt8.fromUInt64_v0 1UL = Stdlib.Option.Option.Some 1uy
Stdlib.UInt8.fromUInt64_v0 255UL = Stdlib.Option.Option.Some 255uy
Stdlib.UInt8.fromUInt64_v0 256UL = Stdlib.Option.Option.None

Stdlib.UInt8.fromInt128_v0 0Q = Stdlib.Option.Option.Some 0uy
Stdlib.UInt8.fromInt128_v0 1Q = Stdlib.Option.Option.Some 1uy
Stdlib.UInt8.fromInt128_v0 255Q = Stdlib.Option.Option.Some 255uy
Stdlib.UInt8.fromInt128_v0 256Q = Stdlib.Option.Option.None
Stdlib.UInt8.fromInt128_v0 (-1Q) = Stdlib.Option.Option.None

Stdlib.UInt8.fromUInt128_v0 0Z = Stdlib.Option.Option.Some 0uy
Stdlib.UInt8.fromUInt128_v0 1Z = Stdlib.Option.Option.Some 1uy
Stdlib.UInt8.fromUInt128_v0 255Z = Stdlib.Option.Option.Some 255uy
Stdlib.UInt8.fromUInt128_v0 256Z = Stdlib.Option.Option.None