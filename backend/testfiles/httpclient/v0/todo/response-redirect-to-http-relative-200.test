[expected-request]
GET PATH HTTP/1.1
Accept: */*
Accept-Encoding: deflate, gzip, br
Content-Type: text/plain; charset=utf-8
Host: HOST

[response]
HTTP/1.1 302 Found
Date: xxx, xx xxx xxxx xx:xx:xx xxx
Location: /v0/response-redirect-destination


[test]
(let response = (Darklang.Stdlib.HttpClient.request "get" "http://URL" [] []) |> Builtin.unwrap
 let respHeaders = response.headers |> Darklang.Stdlib.List.filter (fun h -> Darklang.Stdlib.Tuple2.first h != "date")
 {response with headers = respHeaders}) =
   Darklang.Stdlib.HttpClient.Response
    { body = "Redirect destination reached"
      statusCode = 200L
      error = ""
      headers =
        [
          "Arbitrary-header" = "Test value"
          "Content-Length" = "28"
          ("content-type", "text/plain; charset=utf-8")
          "HTTP/1.1 302 Found" = ""
          Location = "/v0/response-redirect-destination"
          "Transfer-Encoding" = "chunked"
          ("server", "kestrel")
        ]
      raw = "Redirect destination reached"
    }
