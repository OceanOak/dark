// Common types and functions for the Model Context Protocol

module Darklang =
  module ModelContextProtocol =
    // <aliases>
    type Json = Stdlib.AltJson.Json
    // </aliases>

    /// The version of the Model Context Protocol implemented
    let protocolVersion = "0.1.0"

    /// A URI identifying a resource
    type ResourceUri = String

    /// A template for resource URIs
    type ResourceUriTemplate = String

    /// A unique identifier for a server
    type ServerId = String

    /// A unique identifier for a tool
    type ToolId = String

    /// A unique identifier for a resource
    type ResourceId = String

    /// A unique identifier for a request
    type RequestId = String

    /// The MIME type of a resource
    type MimeType = String

    /// The content of a resource
    type ResourceContent =
      { uri: ResourceUri
        mimeType: MimeType
        text: String }

    /// A description of a resource
    type ResourceDescription =
      { uri: ResourceUri
        name: String
        description: Stdlib.Option.Option<String>
        mimeType: Stdlib.Option.Option<MimeType> }

    /// A description of a resource template
    type ResourceTemplateDescription =
      { uriTemplate: ResourceUriTemplate
        name: String
        description: Stdlib.Option.Option<String>
        mimeType: Stdlib.Option.Option<MimeType> }

    /// A description of a tool
    type ToolDescription =
      { name: ToolId
        description: String
        inputSchema: Json // JSON Schema for the tool's input parameters
        outputSchema: Stdlib.Option.Option<Json> } // Optional JSON Schema for the tool's output

    /// Server information
    type ServerInfo =
      { name: String
        version: String }

    /// Server capabilities
    type ServerCapabilities =
      { resources: Stdlib.Option.Option<ResourceCapabilities>
        tools: Stdlib.Option.Option<ToolCapabilities> }

    /// Resource capabilities
    and ResourceCapabilities =
      { supportsResourceListing: Bool
        supportsResourceTemplates: Bool }

    /// Tool capabilities
    and ToolCapabilities =
      { supportsToolListing: Bool }

    /// Error codes for the Model Context Protocol
    module ErrorCodes =
      let parseError = -32700L
      let invalidRequest = -32600L
      let methodNotFound = -32601L
      let invalidParams = -32602L
      let internalError = -32603L
      let resourceNotFound = -32800L
      let resourceAccessDenied = -32801L
      let toolExecutionError = -32900L