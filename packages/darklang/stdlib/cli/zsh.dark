module Darklang.Stdlib.Cli.Zsh


/// Read the content of .zshrc file
let readZshrc () : Result.Result<String, String> =
  (Builtin.fileRead "$HOME/.zshrc")
  |> Result.map (fun content -> String.fromBytesWithReplacement content)

/// Overwrite what's in the .zshrc file
let overwriteZshrc (content: String) : Result.Result<Unit, String> =
  (Builtin.fileWrite (String.toBytes content) "$HOME/.zshrc")
  |> Result.map (fun _ -> ())


/// Apply changes to .zshrc
/// , via `source`
let applyZshConfigChanges () : Result.Result<Unit, String> =
  Cli.executeWithUnitOrStdErr "source $HOME/.zshrc"


/// Delete an alias from .zshrc
let deleteAlias (alias: String) : Result.Result<Unit, String> =
  (readZshrc ())
  |> Result.andThen (fun content ->
    let updatedContent =
      content
      |> String.split "\n"
      |> List.filter (fun line ->
        Bool.not (String.contains line $"alias {alias}="))
      |> String.join "\n"

    overwriteZshrc updatedContent)


/// Add an alias to .zshrc
let addAlias
  (alias: String)
  (command: String)
  : Result.Result<Unit, String> =
  let aliasDefinition = $"alias {alias}='{command}'"

  (readZshrc ())
  |> Result.map (fun content ->
    let updatedContent = content ++ "\n" ++ aliasDefinition
    overwriteZshrc updatedContent
    applyZshConfigChanges ())