/// Input/Output handling for the MCP server
module Darklang.LanguageTools.McpServer


/// Read a message from the client using line-based stdio
let readMessageFromClient () : String =
  let message = Builtin.stdinReadLine ()
  log $"Got message from stdin, length: {(Stdlib.String.length message) |> Stdlib.Int64.toString}"

  if message == "" then
    log "Message is empty"
    ""
  else
    Stdlib.String.trim message

/// Send a JSON response to the client
let sendJsonResponse (response: Json) : Unit =
  let responseStr = Stdlib.AltJson.format response
  logAndSendToClient responseStr

/// Send a successful response with result
let sendSuccessResponse 
  (requestId: Stdlib.Option.Option<JsonRPC.RequestId>) 
  (result: Json) 
  : Unit =
  let response = JsonRPC.Response.Ok.make requestId result
  sendJsonResponse response

/// Send an error response
let sendErrorResponse
  (requestId: Stdlib.Option.Option<JsonRPC.RequestId>)
  (code: Int64)
  (message: String)
  : Unit =
  let response = JsonRPC.Response.Error.make requestId code message Stdlib.Option.Option.None
  sendJsonResponse response