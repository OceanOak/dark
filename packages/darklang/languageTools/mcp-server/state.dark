/// State management for the MCP server
module Darklang.LanguageTools.McpServer


// <aliases>
// Json type alias removed to prevent UNIQUE constraint conflicts - use shared aliases.dark
// </aliases>


/// State for the MCP server
type McpState =
  { initialized: Bool
    shouldShutdown: Bool
    traceLevel: ModelContextProtocol.TraceLevel
    loggingLevel: ModelContextProtocol.LoggingLevel
    resources: Dict<ModelContextProtocol.ResourceDescription>
    resourceTemplates: Dict<ModelContextProtocol.ResourceTemplateDescription>
    tools: Dict<ModelContextProtocol.ToolDescription>
    prompts: Dict<ModelContextProtocol.PromptDescription>
    roots: List<ModelContextProtocol.Root> }

/// Create initial server state
let initialState () : McpState =
  McpState
    { initialized = false
      shouldShutdown = false
      traceLevel = ModelContextProtocol.TraceLevel.Off
      loggingLevel = ModelContextProtocol.LoggingLevel.Info
      resources = Stdlib.Dict.empty
      resourceTemplates = Stdlib.Dict.empty
      tools = Stdlib.Dict.empty
      prompts = Stdlib.Dict.empty
      roots = [] }