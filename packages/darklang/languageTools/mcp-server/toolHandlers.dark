/// Tool handlers for the MCP server
module Darklang.LanguageTools.McpServer.ToolHandlers


// <aliases>
// Json type alias removed to prevent UNIQUE constraint conflicts - use shared aliases.dark
// </aliases>

/// Handle a tools/list request
let handleListToolsRequest
  (state: McpState)
  (requestId: JsonRPC.RequestId)
  : McpState =
  log "Handling tools/list request"

  let toolsList = state.tools |> Stdlib.Dict.values
  let result = ModelContextProtocol.Tools.ListToolsResponse.ListToolsResponse {
    tools = toolsList
    nextCursor = Stdlib.Option.Option.None
  }
  let tools = ModelContextProtocol.Tools.ListToolsResponse.toJson result

  sendSuccessResponse (Stdlib.Option.Option.Some requestId) tools
  state

/// Handle a tools/call request
let handleCallToolRequest
  (state: McpState)
  (requestId: JsonRPC.RequestId)
  (params: ModelContextProtocol.Tools.CallToolRequest.CallToolParams)
  : McpState =
  log $"Handling tools/call request for tool: {params.name}"

  let response = Tools.handleToolCall params.name params.arguments

  sendSuccessResponse (Stdlib.Option.Option.Some requestId) response
  state

